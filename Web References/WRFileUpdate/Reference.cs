//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace ServiceManual.WRFileUpdate {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="UpdateFileWebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class UpdateFileWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetUpdateFileListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFilePermissionListOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public UpdateFileWebService() {
            this.Url = global::ServiceManual.Properties.Settings.Default.ServiceManual_WRFileUpdate_UpdateFileWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetUpdateFileListCompletedEventHandler GetUpdateFileListCompleted;
        
        /// <remarks/>
        public event GetFilePermissionListCompletedEventHandler GetFilePermissionListCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateFileList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GetUpdateFileList(string account) {
            object[] results = this.Invoke("GetUpdateFileList", new object[] {
                        account});
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateFileListAsync(string account) {
            this.GetUpdateFileListAsync(account, null);
        }
        
        /// <remarks/>
        public void GetUpdateFileListAsync(string account, object userState) {
            if ((this.GetUpdateFileListOperationCompleted == null)) {
                this.GetUpdateFileListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateFileListOperationCompleted);
            }
            this.InvokeAsync("GetUpdateFileList", new object[] {
                        account}, this.GetUpdateFileListOperationCompleted, userState);
        }
        
        private void OnGetUpdateFileListOperationCompleted(object arg) {
            if ((this.GetUpdateFileListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateFileListCompleted(this, new GetUpdateFileListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFilePermissionList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Result GetFilePermissionList() {
            object[] results = this.Invoke("GetFilePermissionList", new object[0]);
            return ((Result)(results[0]));
        }
        
        /// <remarks/>
        public void GetFilePermissionListAsync() {
            this.GetFilePermissionListAsync(null);
        }
        
        /// <remarks/>
        public void GetFilePermissionListAsync(object userState) {
            if ((this.GetFilePermissionListOperationCompleted == null)) {
                this.GetFilePermissionListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFilePermissionListOperationCompleted);
            }
            this.InvokeAsync("GetFilePermissionList", new object[0], this.GetFilePermissionListOperationCompleted, userState);
        }
        
        private void OnGetFilePermissionListOperationCompleted(object arg) {
            if ((this.GetFilePermissionListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFilePermissionListCompleted(this, new GetFilePermissionListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Result {
        
        private string descriptionField;
        
        private string extDataField;
        
        private string failDescriptionField;
        
        private int failNumField;
        
        private bool isOKField;
        
        private int numField;
        
        private int stateCodeIDField;
        
        private string succeedDescriptionField;
        
        private int succeedNumField;
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string ExtData {
            get {
                return this.extDataField;
            }
            set {
                this.extDataField = value;
            }
        }
        
        /// <remarks/>
        public string FailDescription {
            get {
                return this.failDescriptionField;
            }
            set {
                this.failDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public int FailNum {
            get {
                return this.failNumField;
            }
            set {
                this.failNumField = value;
            }
        }
        
        /// <remarks/>
        public bool IsOK {
            get {
                return this.isOKField;
            }
            set {
                this.isOKField = value;
            }
        }
        
        /// <remarks/>
        public int Num {
            get {
                return this.numField;
            }
            set {
                this.numField = value;
            }
        }
        
        /// <remarks/>
        public int StateCodeID {
            get {
                return this.stateCodeIDField;
            }
            set {
                this.stateCodeIDField = value;
            }
        }
        
        /// <remarks/>
        public string SucceedDescription {
            get {
                return this.succeedDescriptionField;
            }
            set {
                this.succeedDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public int SucceedNum {
            get {
                return this.succeedNumField;
            }
            set {
                this.succeedNumField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetUpdateFileListCompletedEventHandler(object sender, GetUpdateFileListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateFileListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateFileListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetFilePermissionListCompletedEventHandler(object sender, GetFilePermissionListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFilePermissionListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFilePermissionListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Result Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Result)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591